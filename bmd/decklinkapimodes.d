// File generated by idl2d from
//   ../DeckLinkAPIModes.idl
module decklinkapimodes;
import decklink4d.port;
import decklinkapitypes;

/* -LICENSE-START-
** Copyright (c) 2013 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

// Type Declarations

// Enumeration Mapping

alias uint BMDDisplayModeFlags; 

/* Enum BMDDisplayMode - Video display modes */

enum 
		/+[v1_enum]+/ /+	_BMDDisplayMode+/
{

    /* SD Modes */

    bmdModeNTSC                                                  = /* 'ntsc' */ 0x6E747363,
    bmdModeNTSC2398                                              = /* 'nt23' */ 0x6E743233,	// 3:2 pulldown
    bmdModePAL                                                   = /* 'pal ' */ 0x70616C20,
    bmdModeNTSCp                                                 = /* 'ntsp' */ 0x6E747370,
    bmdModePALp                                                  = /* 'palp' */ 0x70616C70,

    /* HD 1080 Modes */

    bmdModeHD1080p2398                                           = /* '23ps' */ 0x32337073,
    bmdModeHD1080p24                                             = /* '24ps' */ 0x32347073,
    bmdModeHD1080p25                                             = /* 'Hp25' */ 0x48703235,
    bmdModeHD1080p2997                                           = /* 'Hp29' */ 0x48703239,
    bmdModeHD1080p30                                             = /* 'Hp30' */ 0x48703330,
    bmdModeHD1080i50                                             = /* 'Hi50' */ 0x48693530,
    bmdModeHD1080i5994                                           = /* 'Hi59' */ 0x48693539,
    bmdModeHD1080i6000                                           = /* 'Hi60' */ 0x48693630,	// N.B. This _really_ is 60.00 Hz.
    bmdModeHD1080p50                                             = /* 'Hp50' */ 0x48703530,
    bmdModeHD1080p5994                                           = /* 'Hp59' */ 0x48703539,
    bmdModeHD1080p6000                                           = /* 'Hp60' */ 0x48703630,	// N.B. This _really_ is 60.00 Hz.

    /* HD 720 Modes */

    bmdModeHD720p50                                              = /* 'hp50' */ 0x68703530,
    bmdModeHD720p5994                                            = /* 'hp59' */ 0x68703539,
    bmdModeHD720p60                                              = /* 'hp60' */ 0x68703630,

    /* 2k Modes */

    bmdMode2k2398                                                = /* '2k23' */ 0x326B3233,
    bmdMode2k24                                                  = /* '2k24' */ 0x326B3234,
    bmdMode2k25                                                  = /* '2k25' */ 0x326B3235,

    /* 4k Modes */

    bmdMode4K2160p2398                                           = /* '4k23' */ 0x346B3233,
    bmdMode4K2160p24                                             = /* '4k24' */ 0x346B3234,
    bmdMode4K2160p25                                             = /* '4k25' */ 0x346B3235,
    bmdMode4K2160p2997                                           = /* '4k29' */ 0x346B3239,
    bmdMode4K2160p30                                             = /* '4k30' */ 0x346B3330,

    /* Special Modes */

    bmdModeUnknown                                               = /* 'iunk' */ 0x69756E6B
}
alias int	_BMDDisplayMode;
alias int BMDDisplayMode;

/* Enum BMDFieldDominance - Video field dominance */

enum 
		/+[v1_enum]+/ /+	_BMDFieldDominance+/
{
    bmdUnknownFieldDominance                                     = 0,
    bmdLowerFieldFirst                                           = /* 'lowr' */ 0x6C6F7772,
    bmdUpperFieldFirst                                           = /* 'uppr' */ 0x75707072,
    bmdProgressiveFrame                                          = /* 'prog' */ 0x70726F67,
    bmdProgressiveSegmentedFrame                                 = /* 'psf ' */ 0x70736620
}
alias int	_BMDFieldDominance;
alias int BMDFieldDominance;

/* Enum BMDPixelFormat - Video pixel formats supported for output/input */

enum 
		/+[v1_enum]+/ /+	_BMDPixelFormat+/
{
    bmdFormat8BitYUV                                             = /* '2vuy' */ 0x32767579,
    bmdFormat10BitYUV                                            = /* 'v210' */ 0x76323130,
    bmdFormat8BitARGB                                            = 32,
    bmdFormat8BitBGRA                                            = /* 'BGRA' */ 0x42475241,
    bmdFormat10BitRGB                                            = /* 'r210' */ 0x72323130
}
alias int	_BMDPixelFormat;
alias int BMDPixelFormat;

/* Enum BMDDisplayModeFlags - Flags to describe the characteristics of an IDeckLinkDisplayMode. */

/+[v1_enum]+/ enum /+	_BMDDisplayModeFlags+/ : int 
{
    bmdDisplayModeSupports3D                                     = 1 << 0,
    bmdDisplayModeColorspaceRec601                               = 1 << 1,
    bmdDisplayModeColorspaceRec709                               = 1 << 2
}
alias int	_BMDDisplayModeFlags;

// Forward Declarations

/+ interface IDeckLinkDisplayModeIterator; +/
/+ interface IDeckLinkDisplayMode; +/

/* Interface IDeckLinkDisplayModeIterator - enumerates over supported input/output display modes. */

const GUID IID_IDeckLinkDisplayModeIterator = IDeckLinkDisplayModeIterator.iid;

interface IDeckLinkDisplayModeIterator : IUnknown
{
extern(System):
    static const GUID iid = { 0x9C88499F,0xF601,0x4021,[ 0xB8,0x0B,0x03,0x2E,0x4E,0xB4,0x1C,0x35 ] };
    HRESULT Next(/+[out]+/ IDeckLinkDisplayMode *deckLinkDisplayMode);
};

/* Interface IDeckLinkDisplayMode - represents a display mode */

const GUID IID_IDeckLinkDisplayMode = IDeckLinkDisplayMode.iid;

interface IDeckLinkDisplayMode : IUnknown
{
extern(System):
    static const GUID iid = { 0x3EB2C1AB,0x0A3D,0x4523,[ 0xA3,0xAD,0xF4,0x0D,0x7F,0xB1,0x4E,0x78 ] };
    HRESULT GetName(/+[out]+/ BMDSTR *name);
    BMDDisplayMode GetDisplayMode();
    int GetWidth();
    int GetHeight();
    HRESULT GetFrameRate(/+[out]+/ BMDTimeValue *frameDuration, 
		/+[out]+/ BMDTimeScale *timeScale);
    BMDFieldDominance GetFieldDominance();
    BMDDisplayModeFlags GetFlags();
};
